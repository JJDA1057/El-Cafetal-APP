<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>